package uk.co.flumox.display {    import com.carlcalderon.arthropod.Debug;    import com.greensock.easing.Cubic;        import flash.display.MovieClip;    import flash.display.Stage;    import flash.events.Event;    import flash.events.MouseEvent;    import flash.events.TimerEvent;    import flash.filters.BlurFilter;    import flash.utils.Dictionary;    import flash.utils.Timer;        import uk.co.flumox.utils.SkinManager;
    	public class DisplayGorilla extends Display {                private var _timer:Timer;        private var _blink_timer:Timer;        private var _idle_timer:Timer;        //        private var _faceElements_obj:Object;        //        private var _rightEyeLid_mc:MovieClip;        private var _leftEyeLid_mc:MovieClip;        public function DisplayGorilla() {			super();            init();		}        //        protected override function init():void {            super.init();            var content_mc:MovieClip = SkinManager.GET_INSTANCE().getMovieAsset("MovieClipGorilla");            addChild(content_mc);            //            _faceElements_obj = {};            //            //brow            var item:DisplayFaceComponent = new DisplayFaceComponent(GET_MOVIE(content_mc, "brow_mc"));            item.setOffset("idle", {y:-10});            item.setOffset("up", {y:-30});            _faceElements_obj["brow"] = item;            //nose            item = new DisplayFaceComponent(GET_MOVIE(content_mc, "nose_mc"));            item.setOffset("idle", {scaleX:-0.03, scaleY:0.03, y:-18});            _faceElements_obj["nose"] = item;            //jaw            item = new DisplayFaceComponent(GET_MOVIE(content_mc, "jaw_mc"), true);            item.setOffset("idle", {y:-4});            _faceElements_obj["jaw"] = item;            var processEyeElements = function ($scope:DisplayGorilla, $eye_mc:MovieClip, $pos_str:String) {                $scope["_"+$pos_str+"EyeLid_mc"] = GET_MOVIE($eye_mc, "eyeLid_mc");                //pupil                var item:DisplayFaceComponent = new DisplayFaceComponent(GET_MOVIE($eye_mc, "pupil_mc"));                if ($pos_str == "right") {                    item.setOffset("up",{y:-30,rotation:-20});                    item.setOffset("idle",{y:-10});                }else{                    item.setOffset("up",{y:-30});                    item.setOffset("idle",{y:-10});                }                _faceElements_obj[$pos_str + "Pupil"] = item;                //eye ball                item = new DisplayFaceComponent(GET_MOVIE($eye_mc, "ball_mc"));                item.setOffset("up",{y:-30});                _faceElements_obj[$pos_str + "EyeBall"] = item;                //eye socket                item = new DisplayFaceComponent(GET_MOVIE($eye_mc, "socket_mc"), true);                if ($pos_str == "right") {                    item.setOffset("up", {rotation:-10, scaleY: 0.17});                    item.setOffset("idle", {rotation:-2});                }else{                    item.setOffset("up", {x:-5, y:-25, rotation:5, scaleX: 0.04, scaleY: 0.25});                    item.setOffset("idle", {x:-5, rotation:2});                }                _faceElements_obj[$pos_str + "Socket"] = item;                //reflection in eye                item = new DisplayFaceComponent(GET_MOVIE($eye_mc, "reflection_mc"));                item.setOffset("up",{y:-30});                item.setOffset("idle",{y:-5});                _faceElements_obj[$pos_str + "Reflection"] = item;            }            var eyes_mc:MovieClip = GET_MOVIE(content_mc, "eyes_mc");            var eye_mc:MovieClip = GET_MOVIE(eyes_mc, "rightEye_mc");            processEyeElements(this, eye_mc,"right");            eye_mc = GET_MOVIE(eyes_mc, "leftEye_mc");            processEyeElements(this, eye_mc,"left");        }        //        protected override function onAddedToStage($event:Event = null):void {            var interval_int:int = int(1000/stage.frameRate);            _timer = new Timer(interval_int);            _timer.addEventListener(TimerEvent.TIMER,onTimerEvent);            _timer.start();            //            interval_int = Math.round(Math.random() * 10) * 1000;            _blink_timer = new Timer(interval_int);            _blink_timer.addEventListener(TimerEvent.TIMER, onBlinkTimerEvent);            _blink_timer.start();            //            _idle_timer = new Timer(1000,1);            _idle_timer.addEventListener(TimerEvent.TIMER, onIdleTimerEvent);            _idle_timer.start();            //            stage.addEventListener(MouseEvent.MOUSE_DOWN,onStageMouseDown);            stage.addEventListener(MouseEvent.MOUSE_UP,onStageMouseUp);        }        //        private function onTimerEvent($event:TimerEvent):void {            var x:Number = Math.max(Math.min(1,stage.mouseX / stage.stageWidth),0);            var y:Number = Math.max(Math.min(1,stage.mouseY / stage.stageHeight),0);            _faceElements_obj["leftPupil"].setFrameProgress(x);            _faceElements_obj["rightPupil"].setFrameProgress(x);            _faceElements_obj["leftEyeBall"].setFrameProgress(x);            _faceElements_obj["rightEyeBall"].setFrameProgress(x);            //            for (var i:String in _faceElements_obj) {                var item:DisplayFaceComponent = _faceElements_obj[i] as DisplayFaceComponent;                item.checkTargetFrame();            }        }        //        private function onBlinkTimerEvent($event:TimerEvent):void {            _leftEyeLid_mc.gotoAndPlay(2);            _rightEyeLid_mc.gotoAndPlay(2);            _blink_timer.reset();            _blink_timer.delay = Math.round(Math.random() * 10) * 1000;            _blink_timer.start();        }        //        private function onIdleTimerEvent($event:TimerEvent):void {            setAnimState("idle",2,true);        }        //        private function onStageMouseDown($event:MouseEvent):void {            //open his eyes wide..            _idle_timer.stop();            setAnimState("up",0.5);        }        //        private function onStageMouseUp($event:MouseEvent):void {            setAnimState("",0.4);            _idle_timer.reset();            _idle_timer.start();        }        //        private function setAnimState($anim_str:String,$speed_num:Number = 2,$yoyo_bool:Boolean = false):void {            for (var i:String in _faceElements_obj) {                var item:DisplayFaceComponent = _faceElements_obj[i] as DisplayFaceComponent;                item.setAnimState($anim_str, $speed_num, $yoyo_bool);            }        }        /*        //        private function onTimerEvent($event:TimerEvent):void {            var x:Number = Math.max(Math.min(1,stage.mouseX / stage.stageWidth),0);            var y:Number = Math.max(Math.min(1,stage.mouseY / stage.stageHeight),0);            _leftPupil_mc.targetFrame = Math.round(_leftPupil_mc.totalFrames * x);            _rightPupil_mc.targetFrame = Math.round(_rightPupil_mc.totalFrames * x);            _leftEyeBall_mc.targetFrame = Math.round(_leftEyeBall_mc.totalFrames * x);            _rightEyeBall_mc.targetFrame = Math.round(_rightEyeBall_mc.totalFrames * x);            //            var clip_mc:MovieClip;            var i:int;            //                        for (i = 0 ; i < _mouseFollow_array.length ; i++) {                clip_mc = GET_MOVIE(_mouseFollow_array[i], "content_mc", true);                if (clip_mc == null) clip_mc = _mouseFollow_array[i];                if (clip_mc.targetFrame != null && clip_mc.currentFrame != clip_mc.targetFrame) {                    clip_mc.gotoAndStop(Math.round(clip_mc.currentFrame + (clip_mc.targetFrame - clip_mc.currentFrame) * 0.3));                }            }            //            if (_mouseDown_bool) {                if (_leftSocket_mc.currentFrame < _leftSocket_mc.totalFrames) _leftSocket_mc.nextFrame();                if (_rightSocket_mc.currentFrame < _rightSocket_mc.totalFrames) _rightSocket_mc.nextFrame();                if (_browHolder_mc.content_mc.currentFrame < _browHolder_mc.content_mc.totalFrames) _browHolder_mc.content_mc.nextFrame();            }            //        }        //		private function onStageMouseDown($event:MouseEvent):void {			//open his eyes wide..            _leftSocket_mc.targetFrame = _rightSocket_mc.targetFrame = _browHolder_mc.content_mc.targetFrame = null;            if (_idleActive_bool == true) {                var content_mc:MovieClip = GET_MOVIE(_noseHolder_mc, "content_mc");                content_mc.targetFrame = 1;            } 			_mouseDown_bool = true;            stopIdleAnimation();		}		//		private function onStageMouseUp($event:MouseEvent):void {            trace("mouse up");            for (var i:int = 0 ; i < _idleItems_array.length ; i++) {                var clip_mc:MovieClip = _idleItems_array[i];                clip_mc.gotoAndStop(1);            }            _leftSocket_mc.targetFrame = 1;            _rightSocket_mc.targetFrame = 1;            _browHolder_mc.content_mc.targetFrame = 1;            _mouseDown_bool = false;            _idle_timer.reset();            _idle_timer.start();		}        */	}}