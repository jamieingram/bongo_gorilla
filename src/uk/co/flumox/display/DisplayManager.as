package uk.co.flumox.display {	import com.carlcalderon.arthropod.Debug;	import com.greensock.easing.Elastic;	import com.greensock.easing.Quad;	import com.greensock.plugins.AutoAlphaPlugin;	import com.greensock.plugins.TweenPlugin;		import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.StageAlign;	import flash.display.StageDisplayState;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.FullScreenEvent;	import flash.events.KeyboardEvent;	import flash.events.MouseEvent;	import flash.events.StatusEvent;	import flash.geom.Matrix;	import flash.geom.Rectangle;	import flash.media.Microphone;	import flash.net.LocalConnection;	import flash.ui.Keyboard;	import flash.ui.Mouse;	import flash.utils.Dictionary;		import uk.co.flumox.application.ApplicationMain;	import uk.co.flumox.data.DataConfigManager;	import uk.co.flumox.utils.Defines;	import uk.co.flumox.utils.FrameCounter;

	/**	 * @author jamieingram	 */	public class DisplayManager extends Display {		        private var _fullScreenMode_bool:Boolean = false;		private var _navigateTo_str:String;        private var _gorilla:DisplayGorilla;        private var _camera:DisplayCamera;        private var _frameCounter:FrameCounter;        private var _keys:Dictionary;        //        private var _copy_matrix:Matrix;        private var _copy_bmd:BitmapData;        //        private var _sending_lc:LocalConnection;        private var _receiving_lc:LocalConnection;				public function DisplayManager() {			super();			this.addEventListener(Event.ADDED_TO_STAGE,onAdded);		}		//		protected function onAdded($event:Event = null):void {			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			init();		}		//		protected override function init():void {			super.init();            //            _keys = new Dictionary();            //            stage.addEventListener(KeyboardEvent.KEY_DOWN, onStageKeyDown);            stage.addEventListener(KeyboardEvent.KEY_UP, onStageKeyUp);            stage.addEventListener(FullScreenEvent.FULL_SCREEN, onFullScreenEvent);            //            TweenPlugin.activate([AutoAlphaPlugin]);		}		//		public function initAfterAssetsLoad():void {			Debug.log("DisplayManager.initAfterAssetsLoad");            //            if (ApplicationMain.IS_GORILLA_BOOL == true) {    			_gorilla = new DisplayGorilla();                _gorilla.x = DataConfigManager.GET_INSTANCE().getConfigNumber(Defines.CONFIG_GORILLA_X);                _gorilla.y = DataConfigManager.GET_INSTANCE().getConfigNumber(Defines.CONFIG_GORILLA_Y);                addChild(_gorilla);                _receiving_lc = new LocalConnection();                _receiving_lc.connect("bongo_gorilla");                _receiving_lc.client = this;            }else{                _camera = new DisplayCamera();                addChild(_camera);                _camera.x = DataConfigManager.GET_INSTANCE().getConfigNumber(Defines.CONFIG_CAMERA_X);                _camera.y = DataConfigManager.GET_INSTANCE().getConfigNumber(Defines.CONFIG_CAMERA_Y);                _camera.positionSignal.add(onCursorPositionUpdated);                _sending_lc = new LocalConnection();                _sending_lc.addEventListener(StatusEvent.STATUS, onStatusError);                //                stage.addEventListener(MouseEvent.MOUSE_DOWN,onStageMouseDown);                stage.addEventListener(MouseEvent.MOUSE_UP,onStageMouseUp);            }            //            /*            var scale_num:Number = _gorilla.getScale();            var factor_num:Number = 0.15;            scale_num *= factor_num;            _copy_bmd = new BitmapData(_gorilla.mask_mc.width * scale_num, _gorilla.mask_mc.height * scale_num,false,0xFF0000);            var copy_bm:Bitmap = new Bitmap(_copy_bmd);            _camera.addChild(copy_bm);            //            _copy_matrix = new Matrix();            _copy_matrix.scale(factor_num,factor_num);            */            if (DataConfigManager.GET_INSTANCE().getConfigBool(Defines.CONFIG_DEBUG_ENABLED)) {                _frameCounter = new FrameCounter();                addChild(_frameCounter);                _frameCounter.start();            }            //		}		//		public function navigateTo($navigateTo_str:String):void {						Debug.log("DisplayManager.navigateTo()" + $navigateTo_str);			//Debug.log("DisplayManager.navigateTo(): "+$navigateTo_str);			//			_navigateTo_str = $navigateTo_str;		}		//        private function onStatusError($event:StatusEvent):void {                    }        //        private function resetAnim():void {            _gorilla.resetAnim();        }        private function onCursorPositionUpdated($x:Number,$y:Number):void {            //_copy_bmd.draw(_gorilla,_copy_matrix);            //_gorilla.updatePosition($x,$y);            if (_sending_lc == null) return;            try {                _sending_lc.send("bongo_gorilla", "updatePosition", $x+"|"+$y);            } catch ($e:Error) {                            }        }        //        public function updatePosition($data_str:String):void {            var pos_array:Array = $data_str.split("|");            _gorilla.updatePosition(Number(pos_array[0]),Number(pos_array[1]));        }        //        private function onStageKeyDown($event:KeyboardEvent):void {            if (_keys[$event.charCode] != true) {                _keys[$event.charCode] = true;                if (ApplicationMain.IS_GORILLA_BOOL == true) {                    if ($event.charCode == Defines.LETTER_F) {                        if (_fullScreenMode_bool == false) {                            enterFullScreen();                        }else{                            exitFullScreen();                        }                    }                }else{                    //we are in the camera control window                    if ($event.charCode == Defines.LETTER_A || $event.charCode == Keyboard.SPACE) {                        _camera.setCrossHairScale(0.7);                        try {                            _sending_lc.send("bongo_gorilla", "showAnimation", "down");                        } catch ($e:Error) {                                                    }                    }                }                            }        }        //        public function showAnimation($animation_str:String):void {            if ($animation_str == "down") {                _gorilla.setAnimState("down", 0.4, false, Quad.easeOut);            }            if ($animation_str == "up") {                _gorilla.setAnimState("up",1,false, Elastic.easeOut);            }            if ($animation_str == "") {                _gorilla.resetAnim();            }        }        //        private function onStageKeyUp($event:KeyboardEvent):void {            if (_keys[$event.charCode] == true) {                if (ApplicationMain.IS_GORILLA_BOOL == true) {                                    }else{                    _camera.setCrossHairScale(1);                    try {                        _sending_lc.send("bongo_gorilla", "showAnimation", "");                    } catch ($e:Error) {                                            }                }                                _keys[$event.charCode] = false;            }            //            /*            if ($event.charCode == Keyboard.SPACE) {                if (_gorilla != null) {                    _gorilla.destroy();                    removeChild(_gorilla);                    _gorilla = null;                }else{                    _gorilla = new DisplayGorilla();                    addChild(_gorilla);                }            }            */        }        //        private function onStageMouseDown($event:MouseEvent):void {            //the mouse has been clicked in the camera control module            _camera.setCrossHairScale(1.3);            try {                _sending_lc.send("bongo_gorilla","showAnimation","up");            } catch ($e:Error) {                            }        }        //        private function onStageMouseUp($event:MouseEvent):void {            _camera.setCrossHairScale(1);            try {                _sending_lc.send("bongo_gorilla","showAnimation","");            } catch ($e:Error) {                        }        }        //        private function onFullScreenEvent($event:FullScreenEvent):void {            _fullScreenMode_bool = $event.fullScreen;            if ($event.fullScreen == false) Mouse.show();        }        //        private function enterFullScreen():void {            //Mouse.hide();            var screenWidth_num:Number = DataConfigManager.GET_INSTANCE().getConfigNumber(Defines.CONFIG_FORCED_SCREEN_WIDTH);            var screenHeight_num:Number = DataConfigManager.GET_INSTANCE().getConfigNumber(Defines.CONFIG_FORCED_SCREEN_HEIGHT);            stage.fullScreenSourceRect = new Rectangle(0,0,screenWidth_num,screenHeight_num);            stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;         }        //        private function exitFullScreen():void {            //Mouse.show();            stage.displayState = StageDisplayState.NORMAL;           }        //	}}