package uk.co.flumox.display {    import com.carlcalderon.arthropod.Debug;    import com.greensock.TweenMax;    import com.greensock.data.TweenMaxVars;    import com.greensock.easing.Elastic;    import com.greensock.easing.Quad;        import flash.display.MovieClip;    import flash.utils.getQualifiedClassName;
        public class DisplayFaceComponent extends Display {                private var _content_mc:MovieClip;        private var _hasAnimations_bool:Boolean;        private var _defaults_obj:Object;        private var _offsets_obj:Object;        private var _activeAnimation_str:String;        private var _targetFrame_int:int;        private var _respond_bool:Boolean;        //        public function DisplayFaceComponent($holder_mc:MovieClip, $hasAnimations_bool:Boolean = false) {            super();            _content_mc = $holder_mc;            _hasAnimations_bool = $hasAnimations_bool;            _offsets_obj = {};			_defaults_obj = {};            _defaults_obj.x = _content_mc.x;            _defaults_obj.y = _content_mc.y;            _defaults_obj.scaleX = _content_mc.scaleX;            _defaults_obj.scaleY = _content_mc.scaleY;            _defaults_obj.rotation = _content_mc.rotation;            _defaults_obj.alpha = _content_mc.alpha;            //            _targetFrame_int = -1;            _respond_bool = false;        }        //        public function setOffset($anim_str:String, $offset_obj:Object):void {            _offsets_obj[$anim_str] = {x:0, y:0, rotation:0, scaleX:0, scaleY: 0, alpha:0};            for (var i:String in $offset_obj) {                if (_offsets_obj[$anim_str][i] != null) {                    _offsets_obj[$anim_str][i] = $offset_obj[i];                }            }        }        //        public function setFrameProgress($progress_num:Number):void {            var content_mc:MovieClip = GET_MOVIE(_content_mc, "content_mc");            _targetFrame_int = $progress_num * content_mc.totalFrames;        }        //        public function setAnimState($anim_str:String, $speed_num:Number = 2, $yoyo_bool:Boolean = false, $tweenFunc:Object = null):void {            var offset_obj:Object = _offsets_obj[$anim_str];            if (offset_obj == null) {                offset_obj = {x:0, y:0, rotation:0, scaleX:0, scaleY: 0, alpha:0};                _offsets_obj[$anim_str] = offset_obj;            }            if ($anim_str != _activeAnimation_str) {                _activeAnimation_str = $anim_str;                if (_hasAnimations_bool && _activeAnimation_str != "") {                    //goto the correct frame of animation                    try {                        _content_mc.gotoAndStop(_activeAnimation_str);                    } catch (e:Error) {                        Debug.log("cannot go to frame label - "+_activeAnimation_str + " in "+_content_mc);                    }                }            }            //            TweenMax.killTweensOf(_content_mc);            var param_obj:TweenMaxVars = new TweenMaxVars();            param_obj.x(_defaults_obj.x + offset_obj.x);            param_obj.y(_defaults_obj.y + offset_obj.y);            param_obj.rotation(_defaults_obj.rotation + offset_obj.rotation);            param_obj.scaleX(_defaults_obj.scaleX + offset_obj.scaleX);            param_obj.scaleY(_defaults_obj.scaleY + offset_obj.scaleY);            param_obj.autoAlpha(_defaults_obj.alpha + offset_obj.alpha);            var tween_func:Object = Quad.easeInOut;            if ($tweenFunc != null) tween_func = $tweenFunc;            var ease_params:Array = null;            if (getQualifiedClassName(tween_func).indexOf("Elastic") != -1) {                ease_params = [3,0.8];            }            param_obj.ease(tween_func, ease_params);            param_obj.yoyo($yoyo_bool);            if ($yoyo_bool == true) {                param_obj.repeat(-1);            }            TweenMax.to(_content_mc, $speed_num, param_obj);        }        //        public function checkTargetFrame():void {            var content_mc:MovieClip = GET_MOVIE(_content_mc, "content_mc",true);            if (content_mc != null && _targetFrame_int != -1 && content_mc.currentFrame != _targetFrame_int) {                content_mc.gotoAndStop(Math.round(content_mc.currentFrame + (_targetFrame_int - content_mc.currentFrame) * 0.5));            }        }        //        public function set respondToMic($respond_bool:Boolean):void {            _respond_bool = $respond_bool;          }        //    }}